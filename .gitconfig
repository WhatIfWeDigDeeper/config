[user]
	email = YOUR-EMAIL-HERE
	name = YOUR-NAME-HERE
[credential]
	helper = osxkeychain
[core]
	editor = atom --wait
	autocrlf = input
	pager = diff-so-fancy | less --tabs=4 -RFX
[alias]
    # some from http://haacked.com/archive/2014/07/28/github-flow-aliases/
	cd = checkout
	cdd = checkout develop
	cdm = checkout master
	un = checkout -- # file name
	fp = !git fetch && git pull
	s = status -s
	find = grep -i -n #-c for counts
  	findf = grep -i -n -S

	# create
	flow-start = !git flow release start $@ && git flow release publish $@
	new = checkout -b

	# modify
	ds = diff --cached
	a = add
  	acm = commit -am
	cm = commit -m
	ca = commit --amend
	up = push -u origin
	rbi = rebase -i # sha before.
	rbim = rebase -i master
	wip = commit -am "[WIP]"
	doc = commit -am "[DOCS] Updated documentation --skip-ci"

	# branch info
	ls = branch
	lsf = ls-files
	lsr = branch --remote
	lst = describe --tags
	lsrt = ls-remote --tags
	url = ls-remote
	last = branch -v

	# config
	ualias = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\\t => \\2/' | sort
	cfg = config --global -e

	# cleanup
	unstage = reset HEAD # file name undo stage only
  	sub = reset HEAD # file name
	gundo = checkout HEAD # file name - both stage and wd
	undo-merge = revert ^M
	toss = checkout -- # file name - undo wd
	unmerged = branch --no-merged
	merged = branch --merged
	del = branch -d
	delete = branch -d
	DEL = branch -D
	delr = !git push origin --delete $@
	nuc = reset --hard origin
	nucm = reset --hard origin/master
	prune = fetch --prune

	cp = cherry-pick

	# delete file from staging, but not wd
	delstg = rm --cached
	rename = mv

	# logging
	l = log --graph --all --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(white)- %an, %ar%Creset'
	lol = log -p --graph --all --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(white)- %an, %ar%Creset'
	ll = log --stat --abbrev-commit
	lg = log --color --graph --pretty=format:'%C(bold white)%h%Creset -%C(bold green)%d%Creset %s %C(bold green)(%cr)%Creset %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	llg = log --color --graph --pretty=format:'%C(bold white)%h %d%Creset%n%s%n%+b%C(bold blue)%an <%ae>%Creset %C(bold green)%cr (%ci)' --abbrev-commit
  	l1 = log --pretty=oneline --abbrev-commit
	lm = log --oneline --left-right HEAD...MERGE_HEAD
  	stats = show --stat

	# advanced plumbing
	read-sha = cat-file -p # sha1
	gcount = count-objects

	# https://github.com/nvie/gitflow/wiki/Command-Line-Arguments
	feature-start = !git flow feature start -F $@ && git flow feature publish
	feature-end = flow feature finish -FDS
	feature-end-keep = flow feature finish -Frk
	feature-publish = flow feature publish
	feature-rebase = flow feature rebase

	release-start = !git flow release start -F $@ && git flow release publish
	release-publish = flow release publish
	release-rebase = flow release rebase
	release-end = flow release finish -Fpn
	release-end-keep = flow release finish -Frk

	hotfix-start = !git flow hotfix start -F $1 && git flow hotfix publish
	hotfix-tag-start = !git checkout tags/v$1 -b v$1 && git flow hotfix start -F $1 v$1 && git flow hotfix publish
	hotfix-publish = flow hotfix publish
	hotfix-end = flow hotfix finish -Fpn

	start = "!gffs() { git flow feature start ${1}; }; gffs"
	finish = "!gfff() { git flow feature finish -F $(git-flow-current-branch); gfff}"
	hotfix = "!gfhs() { git flow hotfix start $1; }; gfhs"
	hotfix-finish = "!gfhf() { git fetch --tags; git pull origin master; git flow hotfix finish -F $(git-flow-current-branch); }; gfhf"

[diff]
  	tool = wstorm
[difftool]
  	prompt = false
[difftool.wstorm]
  	cmd = /usr/local/bin/wstorm diff "$LOCAL" "$REMOTE"
[merge]
  	tool = wstorm
[mergetool.wstorm]
  	cmd = /usr/local/bin/wstorm merge "$LOCAL" "$REMOTE" "$BASE" "$MERGED"
[push]
  	followTags = true
[color]
	ui = true
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[color "diff"]
	meta = yellow
	frag = magenta bold
	commit = yellow bold
	old = red bold
	new = green bold
	whitespace = red reverse
[rerere]
	enabled = true
